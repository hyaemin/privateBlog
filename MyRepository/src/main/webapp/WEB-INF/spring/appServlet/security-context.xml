<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

	<!-- 사용자로부터 login.kosta으로 요청이되면 intercept가 요청을 가로채서 filter실행
	 auto-config="true" : 스프링이 제공하는 로그인 폼을 자동으로 이동한다. 
	 -hasRole() : 하나만 권한을준다 
	 -hasAnyRole() : 둘다 권한을 가질수 있게해준다. ex)access="hasAnyRole('ROLE_ADMIN','ROLE_USER')" 
	 
	 -pattern="/customer/*Detail.kosta" 
	 use-expressions="true" : intercept-url태그의 access속성에서 스프링시큐리티가 제공하는 spEL(스프링표현식)을 
							     사용 할수 있도록 만들어준다. 표현식을 사용하면 접근IP 제한과 같이 좀더 풍부한 접근 제한 설정할수 있다. -->
	<security:http auto-config="true" use-expressions="true">
		<security:intercept-url pattern="/user/login"
			access="hasRole('ROLE_USER')" /> <!-- access(허용범위)의 값은 개발자가 정한 임의의 값 -->
		<security:intercept-url pattern="/admin/**"
			access="hasRole('ROLE_ADMIN')" />
		<security:intercept-url pattern="/member/**"
			access="isAuthenticated()" />
		<security:form-login login-page="/user/loginForm"
			login-processing-url="/j_spring_security_check" username-parameter="username"
			password-parameter="password" authentication-failure-url="/user/loginForm?ng" />

		<security:logout logout-url="/j_spring_security_logout"
			invalidate-session="true" delete-cookies="JSESSIONID"
			logout-success-url="/user/loginForm" />

	</security:http>

	<!-- 각 페이지(ex-login.kosta, welcome.kosta)에 누가 들어 갈수 있는지를 설정하는 부분임. -->
	<security:authentication-manager>
		<security:authentication-provider>
			<security:user-service>
				<!-- id는 user, pwd는 1234로 로그인된 사용자 만이 login.html페이지를 보여주겠다. -->
				<security:user name="user" password="1234"
					authorities="ROLE_USER" />
				<security:user name="admin" password="1234"
					authorities="ROLE_ADMIN,ROLE_USER" />
			</security:user-service>
		</security:authentication-provider>
	</security:authentication-manager>


</beans>
